# probelm link - https://leetcode.com/problems/find-closest-node-to-given-two-nodes/description/
# code - 
class Solution {
public:
    vector<int> getDist(int start, vector<int>& edges) {
        int n = edges.size();
        vector<int> dist(n, -1);
        int d = 0;
        int node = start;

        while(node != -1 && dist[node] == -1) {
            dist[node] = d;
            d++;
            node = edges[node];
        }
        return dist;
    }

    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = edges.size();

        // Get distances from node1 and node2
        vector<int> dist1 = getDist(node1, edges);
        vector<int> dist2 = getDist(node2, edges);

        int ans = -1;
        int bestDist = INT_MAX;

        for(int i=0; i<n; i++) {
            if(dist1[i] == -1 || dist2[i] == -1) continue;  
            int maxDist = max(dist1[i], dist2[i]);
            if(maxDist < bestDist) {
                bestDist = maxDist;
                ans = i;
            }
            else if(maxDist == bestDist && i < ans) {
                ans = i;  
            }
        }
        return ans;
    }
};
